#!/usr/bin/env php
<?php declare(strict_types=1);

use PackageVersions\Versions;
use Shopware\Core\Framework\Plugin\KernelPluginLoader\DbalKernelPluginLoader;
use Shopware\Production\Kernel;
use Shopware\Core\Framework\Plugin\KernelPluginLoader\StaticKernelPluginLoader;
use Symfony\Bundle\FrameworkBundle\Console\Application;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Debug\Debug;
use Symfony\Component\Dotenv\Dotenv;

set_time_limit(0);

$classLoader = require __DIR__ . '/../vendor/autoload.php';

if (!class_exists(Application::class)) {
    throw new RuntimeException('You need to add "symfony/framework-bundle" as a Composer dependency.');
}

if (!class_exists(Dotenv::class)) {
    throw new RuntimeException('APP_ENV environment variable is not defined. You need to define environment variables for configuration or add "symfony/dotenv" as a Composer dependency to load variables from a .env file.');
}

$envFile = __DIR__ . '/../.env';

if (is_readable($envFile) && !is_dir($envFile)) {
    (new Dotenv(true))->load(__DIR__ . '/../.env');
}

if (!isset($_SERVER['DATABASE_URL'])) {
    // fake DATABASE_URL
    $_SERVER['DATABASE_URL'] = 'mysql://_placeholder.test';
}

if (!isset($_SERVER['PROJECT_ROOT'])) {
    $_SERVER['PROJECT_ROOT'] = dirname(__DIR__);
}

$input = new ArgvInput();
$env = $input->getParameterOption(['--env', '-e'], $_SERVER['APP_ENV'] ?? 'dev', true);
$debug = (bool) ($_SERVER['APP_DEBUG'] ?? ($env !== 'prod')) && !$input->hasParameterOption('--no-debug', true);

if ($debug) {
    umask(0000);

    if (class_exists(Debug::class)) {
        Debug::enable();
    }
}

$shopwareVersion = Versions::getVersion('shopware/core');

$pluginLoader = new StaticKernelPluginLoader($classLoader, null);

if (!isset($_SERVER['DATABASE_URL'])) {
    // fake DATABASE_URL
    $_SERVER['DATABASE_URL'] = 'mysql://_placeholder.test';
} else if ($input->getFirstArgument() !== 'system:install') {
    $pluginLoader = new DbalKernelPluginLoader($classLoader, null, \Shopware\Core\Kernel::getConnection());
}

$kernel = new Kernel($env, $debug, $pluginLoader, $shopwareVersion);
$application = new Application($kernel);
$application->run($input);
